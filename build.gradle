buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE'
		classpath 'se.transmode.gradle:gradle-docker:1.2'
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

defaultTasks 'tasks'

group = 'net.nlacombe'
version = '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.flywaydb:flyway-core:4.2.0'
	compile 'javax.inject:javax.inject:1'
	compile 'org.slf4j:slf4j-api:1.7.25'
	compile 'org.bouncycastle:bcprov-jdk15on:1.58'
	compile 'org.apache.commons:commons-lang3:3.6'

	runtime 'mysql:mysql-connector-java:6.0.6'
	runtime 'ch.qos.logback:logback-classic:1.2.3'

	testCompile 'junit:junit:4.12'
	testCompile 'org.springframework.boot:spring-boot-starter-test:1.5.8.RELEASE'
	testCompile 'org.assertj:assertj-core:3.8.0'
	testCompile 'org.mockito:mockito-core:2.11.0'
}

repositories {
	mavenCentral()
	mavenLocal()
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.2.1'
}

task buildDockerImage(type: Docker, dependsOn: build) {
	tag = "${project.name}"
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from 'src/main/docker/'
			into stageDir
		}
		copy {
			from jar
			into stageDir
		}
	}
}

idea {
	module {
		downloadJavadoc = true
		downloadSources = false
	}
}
